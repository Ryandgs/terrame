Using package's configuration file
Loading configuration file '/Users/pedro/github/terrame-pedro/repository/logo/config.lua'
Using log directory '/Users/pedro/github/terrame-pedro/repository/logo/log/'
Loading package 'logo'
Looking for overwritten variables
Looking for documented functions
Looking for package functions
Skip looking for lines of source code
Testing tests/Ants.lua
Testing Ants
Checking if all asserts were executed
Testing tests/Disease.lua
Testing Disease
Checking if all asserts were executed
Testing tests/GrowingSociety.lua
Testing GrowingSociety
Checking if all asserts were executed
Testing tests/Heatbugs.lua
Testing Heatbugs
Checking if all asserts were executed
Testing tests/Labyrinth.lua
Testing Labyrinth
Checking if all asserts were executed
Testing tests/LifeCycle.lua
Testing LifeCycle
Checking if all asserts were executed
Testing tests/Overpopulation.lua
Testing Overpopulation
Checking if all asserts were executed
Testing tests/PredatorPrey.lua
Testing PredatorPrey
Checking if all asserts were executed
Testing tests/Schelling.lua
Testing Schelling
Checking if all asserts were executed
Testing tests/SingleAgent.lua
Testing SingleAgent
Checking if all asserts were executed
Testing tests/Sugarscape.lua
Testing Sugarscape
Checking if all asserts were executed
Testing tests/Utils.lua
Testing getLabyrinth
Checking if all asserts were executed
Checking if functions from source code were tested
Checking Ants.lua
Checking Disease.lua
Checking GrowingSociety.lua
Checking Heatbugs.lua
Checking Labyrinth.lua
Checking LifeCycle.lua
Checking Overpopulation.lua
Checking PredatorPrey.lua
Checking Schelling.lua
Checking SingleAgent.lua
Checking Sugarscape.lua
Checking Utils.lua
Skipping lines of source code check
Testing examples
Testing ants
Testing disease
Testing road
Checking logs

Functional test report for package 'logo':
Tests were executed in 609.68 seconds.
No print() calls were found when loading the package.
No variable is overwritten when loading the package.
There are no invalid files or directories in directory 'tests'.
All asserts were executed at least once.
All 46 asserts were executed successfully.
All 12 tested functions do not have any unexpected execution error.
All 12 tested functions have at least one assert.
All 12 tested functions exist in the source code of the package.
No tested function creates or updates any global variable.
No function prints any text on the screen.
No assertError() calls have error messages pointing to internal files.
No file or directory was created along the tests.
All 12 functions of the package were tested.
No lines from the source code were verified.
All 3 examples were successfully executed.
No new log file was created.
All log files were used in the tests.
Summing up, all tests were successfully executed.
